<?php

namespace Ldc\EventBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * EventRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EventRepository extends EntityRepository
{
	public function findLatestEvents($start)
	{
		$qb = $this->createQueryBuilder("e");
		$qb->where("e.date_event >= :start")
			 ->setParameters(array("start" =>$start))
			 ->orderBy("e.date_event","asc"); 
			 
		return $qb->getQuery()->getResult();
	}
	
	public function getLastEvent()
	{
		$qb = $this->createQueryBuilder("e");
		$qb->orderBy("e.date_created","desc");
		$q = $qb->getQuery();
		
		//$q->setFirstResult(1);
		$q->setMaxResults(1);
		
		return $q->getOneOrNullResult();
	}
	
	public function countAll()
	{
		return $this->createQueryBuilder('e')
		 ->select('COUNT(e)')
		 ->getQuery()
		 ->getSingleScalarResult();
	}
	
	public function groupByMonth(array $events) //Tableau d'objets de Event
	{
		$sortedEvents = array();
		$month = $events[0]->getDateEvent()->format("m");
		$i = 0;
		foreach($events as $event)
		{
			if($event->getDateEvent()->format("m") != $month){
				$i++;	
				$month = $event->getDateEvent()->format("m");
			}
			$sortedEvents[$i][] = $event;
		}
		unset($events);
		
		return $sortedEvents;
	}
	
}